<!-- Launch the OpenNI device driver -->
<launch> 
         
 <!-- Parameters -->
  <arg name="manager_name" default="rgbd_manager"/>
  <arg name="calib_path" default="$(find ccny_rgbd)/data/calibration_openni_default"/> 
  <arg name="unwarp" default="false"/> 
  <arg name="scale" default="1.0"/> 
  <arg name="publish_cloud" default="true"/>
  <arg name="verbose" default="false"/>  # to display rgbd_image_proc messages
  
  <!-- Nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager_name)" args="manager"
        output="screen"/>


  <node pkg="nodelet" type="nodelet" name="rgbd_image_proc"
        args="load ccny_rgbd/RGBDImageProcNodelet $(arg manager_name) _image_transport:=theora"
        output="screen">
    
    <!-- Resample by a factor of 2-->
    <param name="scale" value="$(arg scale)"/>
    <param name="unwarp" value="$(arg unwarp)"/>
    <param name="publish_cloud" value="$(arg publish_cloud)"/>
    <param name="calib_path" value="$(arg calib_path)"/>
    <param name="verbose" value="$(arg verbose)"/>

    <remap from="/camera/rgb/image_color"   to="/rgb/image_raw"/>
    <remap from="/camera/depth/image_raw"   to="/depth/image_raw"/>
    <remap from="/camera/rgb/camera_info"   to="/rgb/camera_info"/>
    <remap from="/camera/depth/camera_info" to="/depth/camera_info"/>


  </node> 

  <!-- static transforms -->
  <arg name="pi/2" value="1.5707963267948966" />
  <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />
        
  <node pkg="tf" type="static_transform_publisher" name="camera_rgb_frame_tf"
        args="0 -0.045 0 0 0 0  /camera_link /camera_rgb_frame 40" />        

  <node pkg="tf" type="static_transform_publisher" name="camera_rgb_optical_frame_tf"
        args="$(arg optical_rotate) /camera_rgb_frame /camera_rgb_optical_frame 40" />  

</launch>
